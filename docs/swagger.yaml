openapi: 3.0.1
info:
  title: checkout-backend-external.API
  version: v2
servers:
  - url: https://apitest.vipps.no/checkout
  - url: https://api.vipps.no/checkout
paths:
  /v2/session:
    post:
      tags:
        - Session
      summary: Creates a Checkout session
      description: "Creates a checkout session and returns a JWT token which wraps the login URL,\r\necom landing page URL, free standing card page URL."
      parameters:
        - name: checkoutSessionThirdPartyInformationHeaders
          in: header
          description: ''
          schema:
            allOf:
              - $ref: '#/components/schemas/CheckoutSessionThirdPartyInformationHeaders'
            description: Information about the merchant system.
        - name: merchantAuthInfoHeaders
          in: header
          description: ''
          schema:
            allOf:
              - $ref: '#/components/schemas/MerchantAuthInfoHeadersV2'
            description: Headers required to retrieve an access token.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CheckoutSessionInitiationRequestV2'
              description: Request to set up a Checkout session
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CheckoutSessionInitiationRequestV2'
              description: Request to set up a Checkout session
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CheckoutSessionInitiationRequestV2'
              description: Request to set up a Checkout session
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSessionInitiationResponse'
      callbacks:
        Dynamic logistics:
          '{$request.body#/logistics/dynamicOptionsCallback}':
            post:
              summary: Callback for dynamic merchant logistics options
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/MerchantLogisticsCallbackRequest'
              responses:
                '200':
                  description: Your server implementation should return this HTTP status code if the data was received successfully
                4XX:
                  description: If your server returns an HTTP status code indicating it does not understand the format of the payload the delivery will be treated as a failure.
                5XX:
                  description: If your server returns an HTTP status code indicating a server-side error the delivery will be treated as a failure.
        Payment completed:
          '{$request.body#/merchantInfo/callbackPrefix}/checkout/v2/order/{$request.body#/transaction/reference}':
            post:
              summary: Callback for session completed
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CallbackSessionDetails'
              responses:
                '200':
                  description: Your server implementation should return this HTTP status code if the data was received successfully
                4XX:
                  description: If your server returns an HTTP status code indicating it does not understand the format of the payload the delivery will be treated as a failure.
                5XX:
                  description: If your server returns an HTTP status code indicating a server-side error the delivery will be treated as a failure.
  '/v2/session/{sessionId}':
    get:
      tags:
        - Session
      summary: Retrieves sessionInfo from database when merchant polls.
      description: "Transaction information, user information and shipping information are included in the response\r\nif the SessionState is PaymentInitiated"
      parameters:
        - name: sessionId
          in: path
          description: 'The Id of the session. Example: "123123".'
          required: true
          schema:
            type: string
        - name: checkoutSessionThirdPartyInformationHeaders
          in: header
          description: ''
          schema:
            allOf:
              - $ref: '#/components/schemas/CheckoutSessionThirdPartyInformationHeaders'
            description: Information about the merchant system.
        - name: merchantAuthInfoHeaders
          in: header
          description: ''
          schema:
            allOf:
              - $ref: '#/components/schemas/MerchantAuthInfoHeadersV2'
            description: Headers required to retrieve an access token.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseV2'
        '404':
          description: The specified session id is unknown.
  /v2/session/cancel:
    post:
      tags:
        - Session
      summary: Cancels the current Checkout session if payment is not initiated
      parameters:
        - name: checkoutSessionThirdPartyInformationHeaders
          in: header
          schema:
            allOf:
              - $ref: '#/components/schemas/CheckoutSessionThirdPartyInformationHeaders'
            description: Information about the merchant system.
        - name: merchantAuthInfoHeaders
          in: header
          schema:
            allOf:
              - $ref: '#/components/schemas/MerchantAuthInfoHeadersV2'
            description: Headers required to retrieve an access token.
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelSessionRequest'
              description: Request to cancel the session.
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelSessionRequest'
              description: Request to cancel the session.
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CancelSessionRequest'
              description: Request to cancel the session.
      responses:
        '200':
          description: ''
        '404':
          description: The specified session id is unknown.
components:
  schemas:
    Amount:
      type: object
      properties:
        currency:
          type: string
        value:
          minimum: 0
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
    AmountV2:
      type: object
      properties:
        value:
          type: integer
          format: int32
        currency:
          type: string
      additionalProperties: false
      description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
    BillingDetailsV2:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        streetAddress:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
      description: Defines the details of the invoiced customer (purchaser) of the order.
    CallbackSessionAmount:
      type: object
      properties:
        value:
          type: integer
          format: int32
        currency:
          type: string
      additionalProperties: false
      description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
    CallbackSessionBillingDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        streetAddress:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
      description: Defines the details of the billing
    CallbackSessionDetails:
      type: object
      properties:
        sessionId:
          type: string
        merchantSerialNumber:
          type: string
        sessionState:
          type: string
        orderId:
          type: string
        apiVersion:
          type: string
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/CallbackSessionBillingDetails'
          description: Defines the details of the billing
          nullable: true
        shippingDetails:
          allOf:
            - $ref: '#/components/schemas/CallbackSessionShippingDetails'
          description: Defines the details of the shipping
          nullable: true
        paymentDetails:
          allOf:
            - $ref: '#/components/schemas/CallbackSessionPaymentDetails'
          description: Defines the details of the payment.
        callbackUrlPrefix:
          type: string
        callbackAuthorizationToken:
          type: string
      additionalProperties: false
      description: Details provided in the session completed callback
    CallbackSessionPaymentDetails:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/CallbackSessionAmount'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
        state:
          type: string
          nullable: true
        paymentMethod:
          type: string
          nullable: true
      additionalProperties: false
      description: Defines the details of the payment.
    CallbackSessionShippingDetails:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        streetAddress:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        shippingMethodId:
          type: string
          nullable: true
      additionalProperties: false
      description: Defines the details of the shipping
    CancelSessionRequest:
      type: object
      properties:
        sessionId:
          type: string
      additionalProperties: false
      description: Request to cancel the session.
    CheckoutSessionInitiationRequestV2:
      type: object
      properties:
        merchantInfo:
          allOf:
            - $ref: '#/components/schemas/PaymentMerchantInfo'
        transaction:
          allOf:
            - $ref: '#/components/schemas/PaymentTransaction'
        logistics:
          allOf:
            - $ref: '#/components/schemas/Logistics'
          description: "If both dynamic and fixed options are specified, dynamic options is provided to the user.\r\nIf no DynamicOptionsCallback is provided, only fixed logistics options will be used.\r\nWhen using dynamic shipping we recommend that you define logistics.fixedOptions as a backup. \r\nIf the callback does not resolve successfully within 8 seconds, returns null or an empty list the system will fall back to static options. \r\nIf no fallback options are provided, the user will be presented with an error and will not be able to continue with the checkout."
          nullable: true
        prefillCustomer:
          allOf:
            - $ref: '#/components/schemas/PrefillCustomer'
          description: Information about the customer to be prefilled
          nullable: true
        customerInteraction:
          type: string
          nullable: true
        contactFields:
          type: boolean
        addressFields:
          type: boolean
        userFlow:
          type: string
          nullable: true
      additionalProperties: false
      description: Request to set up a Checkout session
    CheckoutSessionInitiationResponse:
      type: object
      properties:
        token:
          type: string
        checkoutFrontendUrl:
          type: string
        pollingUrl:
          type: string
      additionalProperties: false
      description: Response from initiating a session.
    CheckoutSessionThirdPartyInformationHeaders:
      type: object
      properties:
        vipps-System-Name:
          type: string
        vipps-System-Version:
          type: string
        vipps-System-Plugin-Name:
          type: string
        vipps-System-Plugin-Version:
          type: string
      additionalProperties: false
      description: Information about the merchant system.
    Logistics:
      type: object
      properties:
        dynamicOptionsCallback:
          type: string
          nullable: true
        fixedOptions:
          type: array
          items:
            $ref: '#/components/schemas/LogisticsOption'
          nullable: true
      additionalProperties: false
      description: "If both dynamic and fixed options are specified, dynamic options is provided to the user.\r\nIf no DynamicOptionsCallback is provided, only fixed logistics options will be used.\r\nWhen using dynamic shipping we recommend that you define logistics.fixedOptions as a backup. \r\nIf the callback does not resolve successfully within 8 seconds, returns null or an empty list the system will fall back to static options. \r\nIf no fallback options are provided, the user will be presented with an error and will not be able to continue with the checkout."
    LogisticsOption:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
        id:
          maxLength: 200
          minLength: 1
          type: string
        priority:
          minimum: 0
          type: integer
          format: int32
          nullable: true
        brand:
          maxLength: 255
          type: string
        product:
          maxLength: 255
          type: string
        isDefault:
          type: boolean
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      description: A logistics option to be presented to the customer
    MerchantAuthInfoHeadersV2:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        ocp-Apim-Subscription-Key:
          type: string
        merchant-Serial-Number:
          type: string
      additionalProperties: false
      description: Headers required to retrieve an access token.
    MerchantLogisticsCallbackRequest:
      type: object
      properties:
        streetAddress:
          type: string
        postalCode:
          type: string
        region:
          type: string
        country:
          type: string
      additionalProperties: false
      description: Information about the customer address used when retrieving dynamic logistics options.
    PaymentDetailsV2:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/AmountV2'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
        state:
          type: string
        aggregate:
          allOf:
            - $ref: '#/components/schemas/TransactionAggregateV2'
          description: Defines the details of the transaction
          nullable: true
      additionalProperties: false
      description: Defines the details of the payment.
    PaymentMerchantInfo:
      type: object
      properties:
        callbackPrefix:
          type: string
        returnUrl:
          type: string
        callbackAuthorizationToken:
          type: string
        termsAndConditionsUrl:
          type: string
          nullable: true
      additionalProperties: false
    PaymentTransaction:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
        reference:
          maxLength: 50
          minLength: 8
          pattern: '^[-a-zA-Z0-9]*$'
          type: string
        paymentDescription:
          type: string
      additionalProperties: false
    PrefillCustomer:
      required:
        - phoneNumber
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        streetAddress:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
      additionalProperties: false
      description: Information about the customer to be prefilled
    SessionResponseV2:
      type: object
      properties:
        sessionId:
          type: string
        reference:
          type: string
        sessionState:
          type: string
        paymentMethod:
          type: string
          nullable: true
        paymentDetails:
          allOf:
            - $ref: '#/components/schemas/PaymentDetailsV2'
          description: Defines the details of the payment.
          nullable: true
        userDetails:
          allOf:
            - $ref: '#/components/schemas/UserDetailsV2'
          description: "Defines the user details of the recipient of the ordered goods.\r\n            \r\nUserDetailsV2 is deprecated. Use ShippingDetailsV2 instead"
          nullable: true
          deprecated: true
        shippingDetails:
          allOf:
            - $ref: '#/components/schemas/ShippingDetailsV2'
          description: "Defines the shipping details of the recipient of the ordered goods.\r\nThe recipient may or may not be the same as the invoiced customer."
          nullable: true
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/BillingDetailsV2'
          description: Defines the details of the invoiced customer (purchaser) of the order.
          nullable: true
      additionalProperties: false
      description: Session information
    ShippingDetailsV2:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        streetAddress:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        shippingMethodId:
          type: string
          nullable: true
      additionalProperties: false
      description: "Defines the shipping details of the recipient of the ordered goods.\r\nThe recipient may or may not be the same as the invoiced customer."
    TransactionAggregateV2:
      type: object
      properties:
        cancelledAmount:
          allOf:
            - $ref: '#/components/schemas/AmountV2'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
          nullable: true
        capturedAmount:
          allOf:
            - $ref: '#/components/schemas/AmountV2'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
          nullable: true
        refundedAmount:
          allOf:
            - $ref: '#/components/schemas/AmountV2'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
          nullable: true
        authorizedAmount:
          allOf:
            - $ref: '#/components/schemas/AmountV2'
          description: 'Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.'
          nullable: true
      additionalProperties: false
      description: Defines the details of the transaction
    UserDetailsV2:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
      additionalProperties: false
      description: "Defines the user details of the recipient of the ordered goods.\r\n            \r\nUserDetailsV2 is deprecated. Use ShippingDetailsV2 instead"
      deprecated: true
